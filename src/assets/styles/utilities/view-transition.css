@view-transition {
  navigation: auto;
}

:root {
  view-transition-name: none;
  /* Single source of truth for VT timing */
  --transition-duration: 600ms;

}

nav {
  view-transition-name: nav-container;
}


/* Keep navigation elements unnamed at the container level; only the
   moving highlight (.nav-background) participates in transitions. */


/* match-element only works for same-document transitions, not cross-document */
/* Keeping for potential future same-document usage */




::view-transition {
  /* Mirror variables here for broader support (also in :root) */
  --transition-duration: 500ms;

}

::view-transition-group(*) {
  animation-timing-function: var(--transition-timing-motion);
}

/* Customize timing for the navigation highlight shared element */
::view-transition-group(nav-background),
::view-transition-group(.nav-background) {
  animation-duration: var(--transition-duration);
  animation-timing-function: var(--transition-timing-motion);
}

/* Optional: allow separate duration/timing if desired */
::view-transition-old(nav-background),
::view-transition-new(nav-background),
::view-transition-old(.nav-background),
::view-transition-new(.nav-background) {}

main {
  view-transition-name: page;
  /* Reuse existing label for scalable styling */
  view-transition-class: page;
  contain: layout style paint;
  /* Improve compositing during cross-document transitions */
  will-change: opacity, transform;
}




::view-transition-old(.title),
::view-transition-new(.title) {
  object-position: left;
}

/* Theme toggle: enable a short root cross-fade when switching schemes */
html.theme-transition {
  /* Temporarily name the root for same-document theme transitions */
  view-transition-name: theme;
}

::view-transition-group(theme) {
  animation-duration: 300ms;
  animation-timing-function: var(--transition-timing-style);
}


/* Avoid running root fade during a theme-only transition */
:root.theme-transition::view-transition-old(root),
:root.theme-transition::view-transition-new(root) {
  animation: none !important;
}

/* During a theme-only transition, prevent any descendant from being a named
   shared element so only the root crossfades. This covers nav background,
   card targets, and any other named elements. */
html.theme-transition * {
  view-transition-name: none !important;
}




/* Root-level cross-fade without motion */
::view-transition-old(.page) {
  animation:
    page-exit-opacity-blur var(--transition-duration) var(--transition-timing-style) 0s 1 normal both,
    page-exit-scale var(--transition-duration) var(--transition-timing-motion) 0s 1 normal both;
}

::view-transition-new(.page) {
  animation:
    page-enter-opacity-blur var(--transition-duration) var(--transition-timing-style) 0s 1 normal both,
    page-enter-scale var(--transition-duration) var(--transition-timing-motion) 0s 1 normal both;
}



/* Ensure snapshots render as-is without cropping/alignment shifts */
::view-transition-old(.page),
::view-transition-new(.page) {}










::view-transition-group(*) {
  animation-duration: var(--transition-duration);
  animation-timing-function: var(--transition-timing-motion);
  isolation: isolate;
  overflow: clip;

}

/* Handle aspect-ratio changes for thumbnails per Jake Archibald's guidance */
::view-transition-group(.thumbnail) {
  /* Clip the image snapshots as they overflow the group during resize */
  overflow: clip;
  /* Give a little margin to avoid clipping antialiasing at edges */
}

::view-transition-old(.thumbnail),
::view-transition-new(.thumbnail) {
  /* Match the group's block size while preserving intrinsic ratio */
  object-fit: cover;
  object-position: center;
  width: 100%;
  height: 100%;
}









@keyframes page-exit-opacity-blur {
  from {
    opacity: 1;
    filter: blur(0px);
  }

  40% {
    opacity: 0;
    filter: blur(8px);
  }

  to {
    opacity: 0;
    filter: blur(8px);
  }
}

@keyframes page-exit-scale {
  from {
    transform: scale(1);
  }

  

  to {
    transform: scale(0.95);
  }
}

@keyframes page-enter-opacity-blur {
  from {
    opacity: 0;
    filter: blur(8px);
  }

  30% {
    opacity: 0;
    filter: blur(8px);
  }

  to {
    opacity: 1;
    filter: blur(0px);
  }
}

@keyframes page-enter-scale {
  from {
    transform: scale(0.95);
  }

  

  to {
    transform: scale(1);
  }
}

/* (Removed mobile override to keep code simple and consistent) */


@media (prefers-reduced-motion: reduce) {

  /* Disable cross-document transitions entirely for reduced motion */
  @view-transition {
    navigation: none;
  }

  ::view-transition-old(),
  ::view-transition-new() {
    animation: none !important;
  }
}

/* During history/BFCache restore, avoid page group animations briefly */
html.restoring ::view-transition-old(root),
html.restoring ::view-transition-new(root) {
  animation: none !important;
}



/* Shared-element: card title → post header title only */
/* Designs (titles) */
::view-transition-group(.heading) {
  overflow: visible;
}

::view-transition-group(.thumbnail) {
  overflow: clip;
}

::view-transition-old(.heading),
::view-transition-old(.thumbnail),
::view-transition-old(.badge-group) {
  animation: card-header-out var(--transition-duration) var(--transition-timing-motion);
}

::view-transition-new(.heading),
::view-transition-new(.thumbnail),
::view-transition-new(.badge-group) {
  animation: card-header-in var(--transition-duration) var(--transition-timing-motion);
}


/* Card → Post Header morph
   - Outgoing (card) slightly scales and fades
   - Incoming (header) grows from the card and settles with a soft pop */
@keyframes card-header-out {
  from {
    opacity: 1;
    filter: blur(0px);
  }

  40% {
    opacity: 0;
    filter: blur(8px);
  }

  to {
    opacity: 0;
    filter: blur(8px);
  }
}

@keyframes card-header-in {
  from {
    opacity: 0;
    filter: blur(8px);
  }

  60% {
    opacity: 1;
    ;
  }

  to {
    opacity: 1;
    filter: blur(0px);
  }
}
