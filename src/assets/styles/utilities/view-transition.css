/* Base configuration */
@view-transition {
  navigation: auto;
}

::view-transition {
  /* Mirror variables */
  --transition-duration: 800ms;
  min-height: 100lvh;
}

/* Global group defaults */
::view-transition-group(*) {
  animation-duration: var(--transition-duration);
  animation-timing-function: var(--transition-timing-motion);
  isolation: isolate;
}

::view-transition-group(*) {
  animation-timing-function: var(--transition-timing-motion);
}

/* Navigation */
nav {
  view-transition-name: nav-container;
}

/* Navigation layering via classes */
::view-transition-group(.nav-active) {
  animation-timing-function: var(--transition-timing-motion);
  z-index: 1;
}

::view-transition-group(.nav-active) {
  will-change: transform, opacity, width, height;
}

::view-transition-group(.nav-foreground) {
  animation-timing-function: var(--transition-timing-style);
  z-index: 2;
}

/* Page */
main {
  view-transition-name: page;
  /* Label for styling */
  view-transition-class: page;
  contain: layout style paint;
  /* Compositing hints */
  will-change: opacity, transform;
}

::view-transition-group(.page) {
  --vt-visible: 1;
  --vt-hidden: 0;
  --vt-blur: 4px;
  --vt-scale-min: 0.99;
}

::view-transition-image-pair(.page) {
  
  transform-origin: top center;
}

/* Single scale animation for the group */
@keyframes page-group-scale {
  from {
    transform: scale(1);
  }

  10% {
    transform: scale(0.98);
  }

  to {
    transform: scale(1);
  }
}

/* Old → exiting (opacity/blur only) */
::view-transition-old(.page) {
  animation-name: page-exit-opacity-blur, page-exit-scale;
  animation-timing-function: var(--transition-timing-scale);
  animation-duration: calc(var(--transition-timing-scale-duration) * 0.8);
  animation-fill-mode: both;
   transform-origin: top center;
  will-change: opacity, filter;
}

/* New → entering (opacity/blur only) */
::view-transition-new(.page) {
  animation-name: page-enter-opacity-blur, page-enter-scale;
  animation-timing-function: var(--transition-timing-scale);
  animation-duration: calc(var(--transition-timing-scale-duration) * 0.8);
  animation-delay: calc(var(--transition-timing-scale-duration) * 0.1);
  animation-fill-mode: both;
   transform-origin: top center;
  will-change: opacity, filter;
}

/* Keyframes for opacity/blur only */
@keyframes page-exit-opacity-blur {
  from {
    filter: blur(0px) opacity(1);
  }

  to {
    filter: blur(8px) opacity(0);
  }
}

@keyframes page-enter-opacity-blur {
  from {
    filter: blur(8px) opacity(0);
  }

  to {
    filter: blur(0px) opacity(1);
  }
}

@keyframes page-enter-scale {
  from {
    transform: scale(0.95);
  }

  

  to {
    transform: scale(1);
  }
}
@keyframes page-exit-scale {
  from {
    transform: scale(1);
  }


  to {
    transform: scale(0.95);
  }
}

/* Shared elements */
::view-transition-group(.card),
::view-transition-group(.heading),
::view-transition-group(.thumbnail),
::view-transition-group(.badge-group) {
  animation-duration: 600ms;

  overflow: clip;
}

/* Preserve snapshot alignment */
::view-transition-old(.card),
::view-transition-new(.card) {
  height: 100%;
  border-radius: 8px;
}

::view-transition-group(.heading) {
  overflow: clip;

}

/* Thumbnail aspect-ratio */
::view-transition-group(.thumbnail) {
  overflow: clip;
}

::view-transition-old(.thumbnail),
::view-transition-new(.thumbnail) {
  height: 100%;
  object-position: 50%;
  object-fit: cover;
}

::view-transition-old(.heading),
::view-transition-old(.badge-group) {
  animation: card-header-out var(--transition-duration) var(--transition-timing-motion);
  animation-fill-mode: forwards;
  height: 100%;
  width: auto;
  /* object-fit: none; */
  object-position: left;
}

::view-transition-new(.heading),
::view-transition-new(.badge-group) {
  animation: card-header-in var(--transition-duration) var(--transition-timing-motion);
  animation-fill-mode: forwards;
  height: 100%;
  /* object-fit: none; */
  object-position: left;
  width: auto;
}

/* Card→Header keyframes */
@keyframes card-header-out {
  from {
    opacity: 1;
    filter: blur(0px);
  }

  40% {
    opacity: 0;
    filter: blur(2px);
  }

  to {
    opacity: 0;
    filter: blur(2px);
  }
}

@keyframes card-header-in {
  from {
    opacity: 0;
    filter: blur(2px);
  }

  60% {
    opacity: 1;
    ;
  }

  to {
    opacity: 1;
    filter: blur(0px);
  }
}

/* Theme toggle */
/* (Theme switch shared elements removed; root-only theme transition retained) */
html.theme-transition {
  /* Temporary root name */
  view-transition-name: theme;
}

/* During theme toggle, suppress all other named elements so only a
   single shared element (the root "theme") is created. */
html.theme-transition * {
  view-transition-name: none !important;
}

/* While theme view-transition runs, suppress regular CSS transitions on
   nav items so they don't appear to animate at a different rate than
   the single root snapshot animation. */
html.theme-transition .nav-item,
html.theme-transition .nav-item .icon,
html.theme-transition .nav-item .title {
  transition: none !important;
}

/* Prevent the default root cross-fade from also animating during
   the theme toggle to avoid duplicate visuals. */
:root.theme-transition::view-transition-old(root),
:root.theme-transition::view-transition-new(root) {

  animation: none !important;
}

::view-transition-group(theme) {
  animation-duration: var(--transition-duration);

  animation-timing-function: var(--transition-timing-style);
  z-index: 0;
  /* page/root underlays switch parts */
}

::view-transition-old(theme) {
  animation-name: page-theme-old;

}

::view-transition-new(theme) {
  animation-name: page-theme-new;
  mix-blend-mode: saturation;
}

@keyframes page-theme-old {

  from {
    filter: blur(0px);
    opacity: 1;
  }

  to {
    filter: blur(0px);
    opacity: 0;
  }
}

@keyframes page-theme-new {
  from {
    filter: blur(0px);
    opacity: 0;
  }


  to {
    filter: blur(0px);
    opacity: 1;
  }


}

/* Overrides */
/* Mobile override removed */

@media (prefers-reduced-motion: reduce) {

  /* Reduced motion: disable */
  @view-transition {
    navigation: none;
  }

  ::view-transition-old(),
  ::view-transition-new() {
    animation: none !important;
  }
}

/* BFCache restore: disable root anim */
html.restoring ::view-transition-old(root),
html.restoring ::view-transition-new(root) {
  animation: none !important;
}