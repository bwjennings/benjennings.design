@view-transition {
  navigation: auto;
}

:root {
  view-transition-name: none;
  /* Single source of truth for VT timing */
  --transition-duration: 500ms;
  --transition-timing: cubic-bezier(0.4, 1.20, 0.22, 1.00);
}
/* Keep navigation elements unnamed at the container level; only the
   moving highlight (.nav-background) participates in transitions. */


/* match-element only works for same-document transitions, not cross-document */
/* Keeping for potential future same-document usage */




::view-transition {
  /* Mirror variables here for broader support (also in :root) */
  --transition-duration: 500ms;
  --transition-timing: cubic-bezier(0.4, 1.20, 0.22, 1.00);
}
::view-transition-group(*){
  animation-timing-function: var(--transition-timing);
}

/* Customize timing for the navigation highlight shared element */
::view-transition-group(nav-background) {
  animation-duration: var(--transition-duration);
  animation-timing-function: var(--transition-timing);
}

/* Optional: allow separate duration/timing if desired */
::view-transition-old(nav-background),
::view-transition-new(nav-background) {
  
}

main {
  view-transition-name: page;
  contain: layout style paint;
  /* Improve compositing during cross-document transitions */
  will-change: opacity, transform;
}

/* Theme toggle: enable a short root cross-fade when switching schemes */
html.theme-transition {
  /* Temporarily name the root for same-document theme transitions */
  view-transition-name: theme;
}
::view-transition-group(theme) {
  animation-duration: 300ms;
  animation-timing-function: cubic-bezier(0.34, 0.88, 0.34, 1.00);
}


/* Avoid running page-level animations during a theme-only transition */
/* Use :root to target the transition pseudos correctly */
:root.theme-transition::view-transition-old(page),
:root.theme-transition::view-transition-new(page) {
  animation: none !important;
}

/* During a theme-only transition, prevent any descendant from being a named
   shared element so only the root crossfades. This covers nav background,
   card targets, and any other named elements. */
html.theme-transition * {
  view-transition-name: none !important;
}




::view-transition-old(page) {
  animation: blur-out var(--transition-duration) var(--transition-timing);
}

::view-transition-new(page) {
  animation: blur-in var(--transition-duration) var(--transition-timing);
}










::view-transition-group(*) {
  animation-duration: var(--transition-duration);
  animation-timing-function: var(--transition-timing);
  isolation: isolate;
  overflow: clip;
  
}








@keyframes blur-out {
  from {
    opacity: 1;
    filter: blur(0px);
    transform: scale(1);
  }
  30% {
    opacity: 0;
    filter: blur(4px);
    transform: scale(0.99);
  }
  to {
    opacity: 0;
    filter: blur(4px);
    transform: scale(0.99);
  }
}

@keyframes blur-in {
  from {
    opacity: 0;
    filter: blur(4px);
    transform: scale(0.98);
  }
  40% {
    opacity: 0;
    filter: blur(4px);
    transform: scale(0.98);
  }
  to {
    opacity: 1;
    filter: blur(0px);
    transform: scale(1);
  }
}


@media (prefers-reduced-motion: reduce) {
  /* Disable cross-document transitions entirely for reduced motion */
  @view-transition { navigation: none; }
  ::view-transition-old(),
  ::view-transition-new() {
    animation: none !important;
  }
}

/* During history/BFCache restore, avoid page group animations briefly */
html.restoring ::view-transition-old(page),
html.restoring ::view-transition-new(page) {
  animation: none !important;
}



/* Shared-element: card title → post header title only */
/* Designs (titles) */
::view-transition-old(design-dwellane-title),
::view-transition-old(design-pls-title),
::view-transition-old(design-herff-jones-title),
::view-transition-old(design-arvest-title) {
  animation: card-header-out var(--transition-duration) var(--transition-timing);
}
::view-transition-new(design-dwellane-title),
::view-transition-new(design-pls-title),
::view-transition-new(design-herff-jones-title),
::view-transition-new(design-arvest-title) {
  animation: card-header-in var(--transition-duration) var(--transition-timing);
}

/* Fundamentals (titles) */
::view-transition-old(fundamental-simplicity-title) {
  animation: card-header-out var(--transition-duration) var(--transition-timing);
}
::view-transition-new(fundamental-simplicity-title) {
  animation: card-header-in var(--transition-duration) var(--transition-timing);
}

/* Experiments (titles) */
::view-transition-old(experiment-spline-title),
::view-transition-old(experiment-spline-2-title),
::view-transition-old(experiment-digital-frame-title) {
  animation: card-header-out var(--transition-duration) var(--transition-timing);
}
::view-transition-new(experiment-spline-title),
::view-transition-new(experiment-spline-2-title),
::view-transition-new(experiment-digital-frame-title) {
  animation: card-header-in var(--transition-duration) var(--transition-timing);
}
/* Card → Post Header morph
   - Outgoing (card) slightly scales and fades
   - Incoming (header) grows from the card and settles with a soft pop */
@keyframes card-header-out {
  from {
    opacity: 1;
    filter:  blur(0px);
  }
  40% {
    opacity: 0.1;
    filter:   blur(8px);
  }
  to {
    opacity: 0;
    filter:  blur(2px);
  }
}

@keyframes card-header-in {
  from {
    opacity: 0;
    filter: blur(8px);
  }
  60% {
    opacity: 1;
      ;
  }
  to {
    opacity: 1;
    filter: blur(0px);
  }
}
