.card {
  cursor: pointer;
  display: grid;

  /* Layout via variables */
  grid-template-columns: var(--card-columns, 1fr);
  grid-template-rows: var(--card-rows, 1fr 1fr auto fit-content);
  grid-template-areas: 
      "title"
      "media"
      "badges"
      "content";

      &:not(:has(p)) {
        grid-template-areas: var(--card-areas-no-media,
          "title"
      "media"
      "badges");
        
      }

  height: 100%;
  /* min-height: 300px; */

  width: 100%;
  background: var(--color-surface-a);
  border: 1px solid var(--color-border-base);
  border-radius: var(--radius-md);

  @supports (corner-shape: squircle) {
    corner-shape: squircle;
    border-radius: 32px;
  }

  outline-style: solid;
  outline-width: 0px;
  outline-color: var(--color-border-base);
  container-type: inline-size;
  transition-property: transform,
  outline-width;
  transition-duration: var(--duration-bounce);
  transition-timing-function: var(--transition-timing-bounce);
  font-variation-settings: "GRAD" 0;
  color: var(--color-text-primary);
  gap: var(--spacing-xl);
  overflow: hidden;
  outline-offset: 0px;
  padding: clamp(var(--spacing-lg), 4cqw, var(--spacing-xxl));
  align-items: start;
  justify-content: start;
  justify-items: start;

  /* Compositing hints */
  contain: paint;
  will-change: transform,
  opacity;


  img {
    grid-area: media;
    width: 100%;
    height: 100%;
    display: block;
  }

  >.thumbnail,
  >.media {
    grid-area: media;
  }

  /* Direct child p -> content */
  >p {
    grid-area: content;
    margin: 0;
  }




  &:hover {
    outline-width: 12px;
  }

  &:active {
    outline-width: 0px;
    transition-duration: 400ms;
    transform: scale(0.95);
  }

  &.large {
    grid-column: span 2;

  }

  &.color1 {
    background-color: var(--color-surface-a);
    color: var(--color-text-base);
    border-color: var(--color-border-base);
    outline-color: var(--color-border-base);

    .icon {
      color: var(--color-icon-base);
    }

    &.emphasis {
      background-color: var(--color-fill-a);
      border-color: var(--color-border-base-emphasis);
      color: var(--color-text-onFill);

      .icon {
        color: var(--color-icon-onFill);
      }
    }
  }

  &.color2 {
    background-color: var(--color-surface-b);
    color: var(--color-text-base-b);
    border-color: var(--color-border-base-b);
    outline-color: var(--color-border-base-b);

    .icon {
      color: var(--color-icon-base-b);
    }

    &.emphasis {
      background-color: var(--color-fill-b);
      border-color: var(--color-border-base-b-emphasis);
      color: var(--color-text-onFill);

      .icon {
        color: var(--color-icon-onFill);
      }
    }
  }

  &.color3 {
    background-color: var(--color-surface-c);
    color: var(--color-text-base-c);
    border-color: var(--color-border-base-c);
    outline-color: var(--color-border-base-c);

    .icon {
      color: var(--color-icon-base-c);
    }

    &.emphasis {
      background-color: var(--color-fill-c);
      border-color: var(--color-border-base-c-emphasis);
      color: var(--color-text-onFill);

      .icon {
        color: var(--color-icon-onFill);
      }
    }
  }

  &.color4 {
    background-color: var(--color-surface-d);
    color: var(--color-text-base-d);
    border-color: var(--color-border-base-d);
    outline-color: var(--color-border-base-d);

    .icon {
      color: var(--color-icon-base-d);
    }

    &.emphasis {
      background-color: var(--color-fill-d);
      border-color: var(--color-border-base-d-emphasis);
      color: var(--color-text-onFill);

      .icon {
        color: var(--color-icon-onFill);
      }
    }
  }


}

.layout-post {
  .card {
    &:hover {
      outline-width: 0px;
    }

    &:active {
      outline-width: 0px;
      transform: none;
    }
  }
}






/* Area mapping */
.card h1,
.card h2,
.card h3,
.card h4,
.card h5,
.card h6 {
  grid-area: title;
  margin: 0;
  justify-self: stretch;
}

.card .content {
  grid-area: content;
}

.card .badge-group {
  grid-area: badges;
  display: flex;
  gap: var(--spacing-xs);
  flex-wrap: wrap;
}

/* Icon box (non-component) */
.icon-box {
  grid-area: media;
}


p {

  font-family: var(--text-body-font-family);
  font-size: var(--text-body-lg-size);
  line-height: var(--text-body-lg-line-height);
  font-weight: var(--text-body-weight);
}

.thumbnail {
  /* Thumbnail fit */
  object-fit: cover;
  object-position: center;
  /* Thumbnail height cap */
  max-height: 120px;

  overflow: hidden;
  display: block;
  width: 100%;
  align-self: stretch;
  background: var(--color-surface-a-secondary);
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: var(--color-icon-base-secondary);
  user-select: none;
  -webkit-user-select: none;
}

::slotted(model-viewer) {
  width: 100%;
  height: 500px;
}

.box {
  --animation-position: 0;
  font-variation-settings: 'GRAD' -200, 'FILL' var(--icon-fill);
  font-family: var(--icon-font-family);
  font-size: 40cqw;
  font-variation-settings:
    'FILL' var(--icon-fill),
    'wght' var(--icon-weight-lg),
    'GRAD' var(--icon-grade-emphasis);
  overflow: hidden;
  display: flex;
  height: 150px;
  width: auto;
  align-self: stretch;
  background: var(--color-surface-b);
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: var(--color-icon-base-secondary);
  margin-top: calc(-1 * var(--spacing-xxl));
  margin-inline: calc(-1 * var(--spacing-xxl));
  user-select: none;
  -webkit-user-select: none;
}


/* Removed unused slotted styling for non-existent slot "icon-box" */


/* Removed invalid nested ::slotted usage */

/* Removed unused slotted styling for non-existent slot "image" */

/* Removed invalid single-colon :slotted selector */



.wrapper {
  display: grid;
  grid-template-rows: auto 1fr auto;
  max-height: 90cqh
}

slot[name="post"] {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xxxl);
  font-size: var(--text-body-sm-size);
  overflow-y: auto;
  flex: 1 1 auto;
  align-items: center;
  width: 100cqw;

  container-type: inline-size;
  container-name: dialog;

}

::slotted([slot="post"]) {
  padding: 40px;
  display: grid;
  grid-template-columns: 1fr;
  flex-direction: column;
  gap: var(--spacing-xxxl);
  width: 100%;
  align-items: start;
  background-size: cover;
}



::slotted(.grid) {
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  grid-template-rows: 500px;
  grid-auto-rows: minmax(100px, max-content);



}

:has(iframe) {
  ::slotted([slot="post"]) {
    grid-template-columns: 1fr;
  }
}




@media screen (max-width: 400px) {
  ::slotted([slot="post"]) {
    grid-auto-columns: 1fr;
  }

  ::slotted([slot="post"]:has(.figma)) {
    grid-template-columns: 1fr;
  }


}
